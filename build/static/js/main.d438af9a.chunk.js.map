{"version":3,"sources":["components/List.jsx","components/ListPageHeader.jsx","components/App.jsx","index.js"],"names":["List","props","useState","onClick","remover","pos","value","ListPageHeader","className","App","list","changeList","remItem","prevList","filter","item","index","inputVal","changeInputVal","onChange","event","newVal","target","type","evt","preventDefault","newItem","previousList","map","key","ReactDOM","render","document","getElementById"],"mappings":"4MAeeA,MAbf,SAAcC,GACZ,MAAoCC,mBAAS,QAA7C,mBAOA,OAPA,UAOO,wBAAKC,QANZ,WAEEF,EAAMG,QAAQH,EAAMI,OAKnBJ,EAAMK,QCAIC,MATf,WACE,OACE,yBAAKC,UAAU,WACb,4CCqDSC,MAtDf,WACC,MAAyBP,mBAAS,CACjC,iCACA,sCAFD,mBAAKQ,EAAL,KAAWC,EAAX,KASIC,EAAU,SAACP,GACdM,GAAW,SAAUE,GACpB,OAAOA,EAASC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUX,SAKpB,EAAiCH,mBAAS,IAA1C,mBAAKe,EAAL,KAAeC,EAAf,KAeA,OACC,yBAAKV,UAAU,aACd,kBAAC,EAAD,MACA,0BAAMA,UAAU,QACf,2BACCW,SAlBc,SAACC,GAClB,IAAIC,EAASD,EAAME,OAAOhB,MAC1BY,EAAeG,IAiBZE,KAAK,OACLjB,MAAOW,IAGR,4BAAQM,KAAK,SAASpB,QAnBR,SAACqB,GACjBA,EAAIC,iBACJ,IAAIC,EAAUT,EACdC,EAAe,IACfP,GAAW,SAACgB,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAyBD,SAevB,uCAGF,6BACC,4BAAKhB,EAAKkB,KA1CC,SAAClB,EAAML,GACpB,OAAO,kBAAC,EAAD,CAAMwB,IAAKxB,EAAKC,MAAOI,EAAML,IAAKA,EAAKD,QAASQ,WCPzDkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d438af9a.chunk.js","sourcesContent":["import React,{useState} from \"react\";\n\nfunction List(props){\n  let [decoration,changeDecoration] = useState(\"none\");\n  function handleClick(){\n    \n    props.remover(props.pos);\n  }\n\n\n  return <li  onClick={handleClick}>\n    {props.value}\n  </li>;\n}\n\nexport default List;","import React from \"react\";\n\nfunction ListPageHeader(){\n  return(\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  )\n}\n\n\nexport default ListPageHeader;","import React, { useState } from \"react\";\nimport List from \"./List.jsx\";\nimport ListPageHeader from \"./ListPageHeader\";\n\nfunction App() {\n\tlet [list, changeList] = useState([\n\t\t\"Note This List cannot be saved\",\n\t\t\"Click on a list item to remove it\",\n\t]);\n\n\tlet addList = (list, pos) => {\n\t\treturn <List key={pos} value={list} pos={pos} remover={remItem} />;\n\t};\n\n\tlet remItem = (pos) => {\n\t\tchangeList(function (prevList) {\n\t\t\treturn prevList.filter((item, index) => {\n\t\t\t\treturn index !== pos;\n\t\t\t});\n\t\t});\n\t};\n\n\tlet [inputVal, changeInputVal] = useState(\"\");\n\n\tlet changeValue = (event) => {\n\t\tlet newVal = event.target.value;\n\t\tchangeInputVal(newVal);\n\t};\n\tlet modifyList = (evt) => {\n\t\tevt.preventDefault();\n\t\tlet newItem = inputVal;\n\t\tchangeInputVal(\"\");\n\t\tchangeList((previousList) => {\n\t\t\treturn [...previousList, newItem];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<ListPageHeader />\n\t\t\t<form className='form'>\n\t\t\t\t<input\n\t\t\t\t\tonChange={changeValue}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={inputVal}\n\t\t\t\t\t// onClick={modifyList}\n\t\t\t\t/>\n\t\t\t\t<button type='submit' onClick={modifyList}>\n\t\t\t\t\t<span>Add</span>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t<ul>{list.map(addList)}</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}